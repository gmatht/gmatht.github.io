use strict;
use warnings;

use File::Slurp;
use Cwd;
use File::HomeDir;
use Term::ReadKey;

use Text::CSV_XS qw( csv );

my @pages;
my %desc;
my %turn1;
my %turn2;
my %turn3;
my %text;

my $aoh = csv (in => "Story.csv",
               headers => "auto");

 for my $L (@{ $aoh }) {
      my $p = $L->{"Page"};
      push(@pages, $p);
      print("PAGE: $p\n");
      $desc{$p} = $L->{"Idea"} // "";
      if ( ! -e  "p$p.jpg" ) {
          my $img = $L->{"Image"} // "";
          if ($img ne '') {
              print("curl '$img' -OutFile p$p.jpg\n");
          }
      }
     $turn1{$p} = $L->{"Turn to page"} // "";
      $turn2{$p} = $L->{"Turn2"} // "";
      $turn3{$p} = $L->{"Turn3"} // "";
      my $attrib = $L->{"Attribution"} // "";
      my $body   = $L->{"Text"} // "";
      $text{$p}  = "<div class='attribution'>" . $attrib . "</div><div class='story-text-body'>" . $body . "</div>";
 }
 
 
 print "all read\n";

# Write a shared stylesheet to improve legibility and aesthetics
open(my $CSS, '>', 'style.css') or die "Cannot write style.css: $!";
print $CSS <<'CSS';
/* Generated by ParseMYOA.pl */
:root{
  --bg:#0f1226;
  --bg-2:#1a1f3b;
  --card:#ffffff;
  --text:#0c0c0d;
  --muted:#5a5f7a;
  --accent:#6b8afd;
  --accent-2:#8aa4ff;
  --radius:16px;
}
*{box-sizing:border-box}
html{font-size:20px}
@media (min-width: 640px){html{font-size:22px}}
@media (min-width: 900px){html{font-size:24px}}
body{
  margin:0;
  min-height:100vh;
  color:var(--text);
  background: radial-gradient(1200px 600px at 10% 0%, #1d2245 0%, var(--bg) 45%, #0b0e1f 100%) fixed;
  font-family: Inter, "Segoe UI", Roboto, Helvetica, Arial, system-ui, -apple-system, sans-serif;
  line-height:1.7;
  letter-spacing:0.2px;
}
.page{
  max-width: 900px;
  margin: 0 auto;
  padding: 24px;
}
.card{
  background: var(--card);
  border-radius: var(--radius);
  box-shadow: 0 10px 30px rgba(0,0,0,0.18), 0 2px 6px rgba(0,0,0,0.12);
  overflow: hidden;
}
.header{
  padding: 20px 24px 0 24px;
}
.title{
  font-weight: 800;
  font-size: clamp(1.6rem, 1.2rem + 1.6vw, 2.4rem);
  margin: 0 0 8px 0;
}
.hero{
  display:block;
  width:100%;
  height:auto;
  max-height: 50vh;
  object-fit: cover;
}
.content{
  padding: 18px 24px 8px 24px;
  font-size: 1.15rem;
}
.content p{ margin: 0 0 1rem 0; }
.attribution{ color: var(--muted); font-size: 0.575rem; font-style: italic; }
.story-text-body{ margin-top: 0.5rem; }
.choices{
  display: grid;
  grid-template-columns: 1fr;
  gap: 12px;
  padding: 16px 24px 24px 24px;
}
@media (min-width:700px){
  .choices{ grid-template-columns: repeat(2, minmax(0,1fr)); }
}
.choice{
  display:block;
  text-decoration:none;
  background: linear-gradient(180deg, var(--accent), var(--accent-2));
  color: white;
  padding: 14px 16px;
  border-radius: 14px;
  font-weight: 650;
  text-align:center;
  box-shadow: 0 6px 16px rgba(107,138,253,0.35);
  transition: transform .06s ease, filter .2s ease, box-shadow .2s ease;
}
.choice:hover{ transform: translateY(-1px); filter: brightness(1.04); box-shadow: 0 10px 24px rgba(107,138,253,0.38); }
.choice:active{ transform: translateY(0); filter: brightness(.98); }
.toolbar{
  display:flex;
  align-items:center;
  justify-content:space-between;
  gap:12px;
  padding: 14px 24px 22px 24px;
}
.home{
  text-decoration:none;
  color: var(--accent);
  font-weight:700;
}
.footer-note{
  color:#c3c7e6;
  font-size:.95rem;
  text-align:center;
  padding:16px;
}
CSS
close $CSS;
 
 for  my $p ( @pages ) {
     print ("WRITING: $p\n");
     open (my $OUT, ">", "p$p.html") or die "Cannot write p$p.html: $!";
     my $title = $desc{$p} // "";
     my $ptext = $text{$p} // "";

     my @options;
     if (defined $turn1{$p} && $turn1{$p} ne '') {
         push @options, sprintf("<a class=\"choice\" href=\"p%s.html\">%s</a>", $turn1{$p}, $desc{$turn1{$p}} // ("Turn to " . $turn1{$p}));
     }
     if (defined $turn2{$p} && $turn2{$p} ne '') {
         push @options, sprintf("<a class=\"choice\" href=\"p%s.html\">%s</a>", $turn2{$p}, $desc{$turn2{$p}} // ("Turn to " . $turn2{$p}));
     }
     if (defined $turn3{$p} && $turn3{$p} ne '') {
         push @options, sprintf("<a class=\"choice\" href=\"p%s.html\">%s</a>", $turn3{$p}, $desc{$turn3{$p}} // ("Turn to " . $turn3{$p}));
     }
     my $choices_html = '';
     if (@options) {
         $choices_html = '<div class="choices">' . (join "\n", @options) . '</div>';
     } else {
         $choices_html = '<div class="choices"><a class="choice" href="p0.html">Alas my memory fails me.</a></div>';
     }

     print $OUT <<HTML;
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>$title</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="style.css">
  <meta name="color-scheme" content="light dark">
  <meta name="theme-color" content="#0f1226">
  <meta name="description" content="A collaborative story page: $title">
  <meta name="generator" content="ParseMYOA.pl">
  
</head>
<body>
  <div class="page">
    <div class="card">
      <div class="header">
        <h1 class="title">$title</h1>
      </div>
      <img class="hero" src="p$p.jpg" alt="$title">
      <div class="content">
        <div class="story-text">$ptext</div>
      </div>
      <div class="toolbar">
        <a class="home" href="p0.html">‚Üê Back to the beginning</a>
        <span class="muted"></span>
      </div>
      $choices_html
    </div>
    <div class="footer-note">Use the choices above to continue your journey.</div>
  </div>
</body>
</html>
HTML
     close $OUT;
 }
 